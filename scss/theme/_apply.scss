$-custom-colors: () !default;

@mixin init($custom-colors) {
  @if $custom-colors {
    $-custom-colors: $custom-colors !global;
  }
}

// Sets all css custom properties on this element to the given theme based on
// the css custom properties already defined for each theme.
@mixin apply($theme) {
  --color-paper-0: var(--color-#{$theme}-paper-0);
  --color-paper-10: var(--color-#{$theme}-paper-10);
  --color-paper-20: var(--color-#{$theme}-paper-20);
  --color-paper-30: var(--color-#{$theme}-paper-30);

  --color-ink-100: var(--color-#{$theme}-ink-100);
  --color-ink-90: var(--color-#{$theme}-ink-90);
  --color-ink-80: var(--color-#{$theme}-ink-80);
  --color-ink-70: var(--color-#{$theme}-ink-70);
  --color-ink-60: var(--color-#{$theme}-ink-60);
  --color-ink-50: var(--color-#{$theme}-ink-50);
  --color-ink-40: var(--color-#{$theme}-ink-40);
  --color-ink-30: var(--color-#{$theme}-ink-30);
  --color-ink-20: var(--color-#{$theme}-ink-20);
  --color-ink-10: var(--color-#{$theme}-ink-10);

  --color-accent: var(--color-#{$theme}-accent);
  --color-accent-hover: var(--color-#{$theme}-accent-hover);
  --color-accent-active: var(--color-#{$theme}-accent-active);
  --color-on-accent: var(--color-#{$theme}-on-accent);
  --color-shadow-100: var(--color-#{$theme}-shadow-100);
  --color-shadow-30: var(--color-#{$theme}-shadow-30);
  --color-shadow-20: var(--color-#{$theme}-shadow-20);
  --color-shadow-10: var(--color-#{$theme}-shadow-10);

  // For each custom color...
  @each $color-name, $_ in $-custom-colors {
    // Set the css custom property for this color to the value in the css
    // custom properties for this color in the desired theme.
    --color-#{$color-name}: var(--color-#{$theme}-#{$color-name});
  }
}

@mixin apply-base($theme) {
  // Separated to support old Safari?
  :root {
    @include apply($theme);
  }
  dialog::backdrop {
    @include apply($theme);
  }
}

// Sets the theme colors on the root and dialog elements for light theme. Must
// be called in the root of a css file (not inside a selector) to work
// correctly.
@mixin light-base {
  @include apply-base("light");
}

// Sets the theme colors on the root and dialog elements for dark theme. Must be
// called in the root of a css file (not inside a selector) to work correctly.
@mixin dark-base {
  @include apply-base("dark");
  // Separated to support old Safari?
  :root {
    color-scheme: dark;
  }
  dialog::backdrop {
    color-scheme: dark;
  }
}

// Sets the theme colors inside this element for light theme.
@mixin light {
  @include apply("light");
}

// Sets the theme colors inside this element for dark theme.
@mixin dark {
  @include apply("dark");
  color-scheme: dark;
}
